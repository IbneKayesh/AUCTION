@model auction.Models.T_USER

@{
    ViewBag.Title = "Create User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <p class="col-md-2">User Id</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_TEXT, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.USER_TEXT, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <p class="col-md-2">User Name</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.USER_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="col-md-2">Password</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_PASS, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.USER_PASS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="col-md-2">Email</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_MAIL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USER_MAIL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="col-md-2">Mobile</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_MOBL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.USER_MOBL, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("CreateUser","SuperAdmin")" , class="btn btn-primary">Reload</a>
                <input type="button" id="findUser" value="Find" class="btn btn-primary" />
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>
}
<div class="col-md-12">
    <div class="table-responsive">
        <table id="UserBasicData" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Staff Id</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Mobile</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            $('#findUser').click(function () {
                var UserId = $('#USER_TEXT').val();
                if (UserId == "") {
                    Swal.fire("error", "enter the user id", "error");
                    return;
                }
                var urL = '/SuperAdmin/FindUser/?USER_TEXT=' + UserId;
                loadTable(urL);
            });

            function loadTable(urL) {
                $.LoadingOverlay("show", {
                    text: "Searching...",
                    background: "rgba(0, 0, 0, 0.5)"
                });
                var table = $('#UserBasicData').DataTable({
                    "ajax": urL,
                    "type": "GET",
                    "datatype": "json",
                    "bDestroy": true,
                    "columns": [
                         { "mData": "USER_TEXT" },
                         { "mData": "USER_NAME" },
                         { "mData": "USER_MAIL" },
                         { "mData": "USER_MOBL" },
                            {
                                "mData": "ACT",
                                render: function (mData) {
                                    if (mData == "1") {
                                        return '<span class="label label-success label-mini">Active</span>'
                                    } else { //0
                                        return '<span class="label label-danger label-mini">Inactive</span>'
                                    }
                                }
                            },

                    ],
                    "language": { "emptyTable": "no data found" }, "width": "100%"
                });
                $.LoadingOverlay("hide");
            };
        });
    </script>
}